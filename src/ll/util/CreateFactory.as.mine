package ll.util
{
	import flash.display.DisplayObject;
	
	import ll.ui.DefaultUIComponent;
	import ll.ui.UIType;
	import ll.ui.collections.ArrayCollection;
	import ll.ui.components.Button;
	import ll.ui.components.CheckBox;
	import ll.ui.components.GridList;
	import ll.ui.components.Image;
	import ll.ui.components.Label;
	import ll.ui.components.List;
	import ll.ui.components.Panel;
	import ll.ui.components.RadioButton;
	import ll.ui.components.Scroller;
	import ll.ui.components.TabBar;
	import ll.ui.components.TextInput;
	import ll.ui.components.TitleWindow;
	import ll.ui.core.ScrollBar;
	import ll.ui.core.UISprite;

	public class CreateFactory
	{
		public static function getPanel():Panel
		{
			var panel:Panel = new Panel();
			panel.assetName = "win_bg_12";
			panel.setsize(80, 60);
			panel.id="Panel"+int(Math.random()*500);
			return panel;
		}
		
		public static function getButton():Button
		{
			var btn:Button = DefaultUIComponent.createButton(null,UIType.BTN_NORMAL,null,'按钮');
			btn.setsize(60, 25);
			btn.id="Button"+int(Math.random()*500);
			return btn;
		}
		
		public static function getImage():Image
		{
			var img:Image = DefaultUIComponent.createImg(null,'win_bg_12',null);
//				new Image();
//			img.assetName = 'win_bg_12';
			img.setsize(80, 25);
			img.id="Image"+int(Math.random()*500);
			return img;
		}
		
		public static function getLabel():Label
		{
			var label:Label = DefaultUIComponent.creatLabel(null,"这是个文本",false);
//				new Label();
//			label.text = "这是个文本";
			label.textColor=0x000000;
			label.id="Label"+int(Math.random()*500);
			return label;
		}
		
		public static function getCheckBoxl():CheckBox
		{
			var check:CheckBox = new CheckBox();
			check.label="多选框";
			check.assetName = 'btn_check';
			check.id="CheckBox"+int(Math.random()*500);
			return check;
		}
		
		public static function getTitleWindow():TitleWindow
		{
			var titleWin:TitleWindow = new TitleWindow();
			titleWin.assetName = "win_bg_12";
			titleWin.setsize(80, 60);
			titleWin.id="TitleWindow"+int(Math.random()*500);
			return titleWin;
		}
		
		public static function getList():List
		{
			var list:List = new List();
//			var dataArr:ArrayCollection=new ArrayCollection([1,2,3]);
//			list.itemRendererXml= <ItemRenderer></ItemRenderer>;
//			list.dataProvider=dataArr;
			list.id="List"+int(Math.random()*500);
			return list;
		}
		
		public static function getGridList():GridList
		{
			var gridlist:GridList = new GridList();
			gridlist.id="GridList"+int(Math.random()*500);
			return gridlist;
		}
		
		public static function getRadioButton():RadioButton
		{
			var radioBtn:RadioButton =DefaultUIComponent.createRadioButton(null,UIType.RADIOBTN_NORMAL);
//				new RadioButton();
//			radioBtn.assetName = "btn_check2";
			radioBtn.label="单选框";
			radioBtn.id="RadioButton"+int(Math.random()*500);
			return radioBtn;
		}
		
		public static function getScroller():UISprite
		{
			var scroller:Scroller = new Scroller();
			scroller.setsize(30,100);
//			var pa:Panel=new Panel();
//			pa.assetName = "win_bg_12";
//			scroller.viewport=pa;
//			pa.setsize(60, 400);
//			pa.visible=false;
			scroller.id="Scroller"+int(Math.random()*500);
			return scroller;
		}
		public static function getTabBar():TabBar
		{
			var tabbar:TabBar = new TabBar();
//			var dataArr:ArrayCollection=new ArrayCollection([1,2,3])
//			tabbar.dataProvider=dataArr;
			tabbar.lableStr="1,2,3"
			tabbar.id="TabBar"+int(Math.random()*500);
			return tabbar;
		}
		public static function getTextInput():TextInput
		{
			var textInput:TextInput = new TextInput();
			textInput.defaultValue="输入框";
			textInput.id="TextInput"+int(Math.random()*500);
			return textInput;
		}
		
		
		public static function getUIComponent(value:String):DisplayObject
		{
			switch(value)
			{
				case "Button":
					return getButton();
					break;
				case "Panel":
					return getPanel();
					break;
				case "Image":
					return getImage();
					break;
				case "Label":
					return getLabel();
					break;
				case "CheckBox":
					return getCheckBoxl();
					break;
				case "TitleWindow":
					return getTitleWindow();
					break;
				case "List":
					return getList();
					break;
				case "RadioButton":
					return getRadioButton();
					break;
				case "Scroller":
					return getScroller();
					break;
				case "TabBar":
					return getTabBar();
					break;
				case "TextInput":
					return getTextInput();
					break;
				case "GridList":
					return getGridList();
					break;
			}
			return null;
		}
	}
}