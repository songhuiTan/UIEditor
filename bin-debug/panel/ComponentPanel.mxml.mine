<?xml version="1.0" encoding="utf-8"?>
<mx:Tree xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 borderVisible="false" dragEnabled="true"
		 labelField="@label" showRoot="true"
		 dataProvider="{componentDp.node}" 
		 iconFunction="setFieldIcon" creationComplete="tree1_creationCompleteHandler(event)"
		 initialize="onInitial(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			[Bindable]
			public var componentDp:XML;
			
			[Embed("assets/Button.png")]
			private var Icon_Button:Class;
			
			[Embed("assets/CheckBox.png")]
			private var Icon_CheckBox:Class;
			
			[Embed("assets/Image.png")]
			private var Icon_Image:Class;
			
			[Embed("assets/Label.png")]
			private var Icon_Label:Class;
			
			[Embed("assets/List.png")]
			private var Icon_List:Class;
			
			[Embed("assets/RadioButton.png")]
			private var Icon_RadioButton:Class;
			
			[Embed("assets/Panel.png")]
			private var Icon_Panel:Class;
			
			[Embed("assets/TabBar.png")]
			private var Icon_TabBar:Class;
			
			[Embed("assets/TextInput.png")]
			private var Icon_TextInput:Class;
			
			[Embed("assets/TitleWindow.png")]
			private var Icon_TitleWindow:Class;
			
			[Embed("assets/Scroller.png")]
			private var Icon_Scroller:Class;
			
			[Embed("assets/List.png")]
			private var Icon_GridList:Class;
			
			protected function onInitial(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				componentDp = new XML("<root>" +
					"<node  label='控件'>" +
					"<node  label='Button' />" +
					"<node  label='CheckBox' />" +
					"<node  label='Image'/>" +
					"<node  label='Label'/>" +
					"<node  label='List'/>" +
					"<node  label='Panel'/>" +
					"<node  label='RadioButton'/>" +
					"<node  label='Scroller'/>" +
					"<node  label='TabBar'/>" +
					"<node  label='TextInput'/>" +
					"<node  label='TitleWindow'/>" +
					"<node  label='GridList'/>" +
					"</node>" +
					"<node  label='自定义'>" +
					"<node  label='ItemRender'/>" +
					"</node></root>");
			}
			
			public function setFieldIcon(item:Object):Class {
				var icon:Class
				switch(String(item.@label))
				{
					case "Button":
						icon = Icon_Button;
						break
					case "CheckBox":
						icon = Icon_CheckBox;
						break;
					case "Image":
						icon = Icon_Image;
						break;
					case "Label":
						icon = Icon_Label;
						break;
					case "List":
						icon = Icon_List;
						break;
					case "Panel":
						icon = Icon_Panel;
						break;
					case "RadioButton":
						icon = Icon_RadioButton;
						break;
					case "Scroller":
						icon = Icon_Scroller;
						break;
					case "TabBar":
						icon = Icon_TabBar;
						break;
					case "TextInput":
						icon = Icon_TextInput;
						break;
					case "TitleWindow":
						icon = Icon_TitleWindow;
						break;
					case "GridList":
						icon = Icon_GridList;
						break;
				}
				return icon;
			}
			
			protected function tree1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				for each(var item:XML in this.dataProvider) 
				{
					if(this.dataDescriptor.isBranch(item) == true)
					{
						if (this.isItemOpen(item)==false)
							this.expandItem(item,true,true);
					}
				}
			}
			
		]]>
	</fx:Script>
</mx:Tree>
